/**
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞ –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ –æ–Ω —è–≤–ª—è–µ—Ç—Å—è —Å–º—É—Ä—Ñ–æ–º
 * @param {Object} stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞
 * @returns {Object} - –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ —Å–º—É—Ä—Ñ–∞
 */
export const analyzeSmurfProbability = (stats) => {
  const {
    matches,
    winRate,
    averageKills,
    averageKDRatio,
    averageKRRatio,
    averageHeadshots,
  } = stats

  let smurfScore = 0
  const reasons = []

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ç—á–µ–π (–Ω–∞–∏–±–æ–ª—å—à–∏–π –≤–µ—Å - —Å–º—É—Ä—Ñ—ã –æ–±—ã—á–Ω–æ –∏–º–µ—é—Ç –º–∞–ª–æ –º–∞—Ç—á–µ–π)
  if (matches <= 1) {
    smurfScore += 50
    reasons.push('–í—Å–µ–≥–æ –æ–¥–∏–Ω –º–∞—Ç—á')
  } else if (matches <= 50) {
    smurfScore += 40
    reasons.push('–û—á–µ–Ω—å –º–∞–ª–æ –º–∞—Ç—á–µ–π')
  } else if (matches <= 100) {
    smurfScore += 30
    reasons.push('–ú–∞–ª–æ –º–∞—Ç—á–µ–π')
  } else if (matches <= 250) {
    smurfScore += 20
    reasons.push('–£–º–µ—Ä–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ç—á–µ–π')
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º K/R (–≤—Ç–æ—Ä–æ–π –ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏ - —Å–º—É—Ä—Ñ—ã –æ–±—ã—á–Ω–æ –∏–º–µ—é—Ç –≤—ã—Å–æ–∫–∏–π K/R)
  if (averageKRRatio >= 1.2) {
    smurfScore += 35
    reasons.push('–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π K/R')
  } else if (averageKRRatio >= 1.0) {
    smurfScore += 25
    reasons.push('–í—ã—Å–æ–∫–∏–π K/R')
  } else if (averageKRRatio >= 0.8) {
    smurfScore += 15
    reasons.push('–•–æ—Ä–æ—à–∏–π K/R')
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º K/D (—Ç—Ä–µ—Ç–∏–π –ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏ - —Å–º—É—Ä—Ñ—ã –æ–±—ã—á–Ω–æ –∏–º–µ—é—Ç –≤—ã—Å–æ–∫–∏–π K/D)
  if (averageKDRatio >= 2.0) {
    smurfScore += 30
    reasons.push('–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π K/D')
  } else if (averageKDRatio >= 1.5) {
    smurfScore += 20
    reasons.push('–í—ã—Å–æ–∫–∏–π K/D')
  } else if (averageKDRatio >= 1.2) {
    smurfScore += 10
    reasons.push('–•–æ—Ä–æ—à–∏–π K/D')
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–±–∏–π—Å—Ç–≤ (—á–µ—Ç–≤–µ—Ä—Ç—ã–π –ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏)
  if (averageKills >= 25) {
    smurfScore += 25
    reasons.push('–û—á–µ–Ω—å –≤—ã—Å–æ–∫–æ–µ —Å—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–±–∏–π—Å—Ç–≤')
  } else if (averageKills >= 20) {
    smurfScore += 20
    reasons.push('–í—ã—Å–æ–∫–æ–µ —Å—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–±–∏–π—Å—Ç–≤')
  } else if (averageKills >= 15) {
    smurfScore += 15
    reasons.push('–•–æ—Ä–æ—à–µ–µ —Å—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–±–∏–π—Å—Ç–≤')
  } else if (averageKills >= 10) {
    smurfScore += 10
    reasons.push('–£–º–µ—Ä–µ–Ω–Ω–æ–µ —Å—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–±–∏–π—Å—Ç–≤')
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥ (–ø—è—Ç—ã–π –ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏ - —Å–º—É—Ä—Ñ—ã –æ–±—ã—á–Ω–æ –∏–º–µ—é—Ç –≤—ã—Å–æ–∫–∏–π –≤–∏–Ω—Ä–µ–π—Ç)
  if (winRate >= 80) {
    smurfScore += 20
    reasons.push('–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π –≤–∏–Ω—Ä–µ–π—Ç')
  } else if (winRate >= 70) {
    smurfScore += 15
    reasons.push('–í—ã—Å–æ–∫–∏–π –≤–∏–Ω—Ä–µ–π—Ç')
  } else if (winRate >= 60) {
    smurfScore += 10
    reasons.push('–•–æ—Ä–æ—à–∏–π –≤–∏–Ω—Ä–µ–π—Ç')
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç —Ö–µ–¥—à–æ—Ç–æ–≤ (–Ω–∞–∏–º–µ–Ω—å—à–∏–π –≤–µ—Å - —Å–º—É—Ä—Ñ—ã –º–æ–≥—É—Ç –∏–º–µ—Ç—å –≤—ã—Å–æ–∫–∏–π HS%)
  if (averageHeadshots >= 60) {
    smurfScore += 15
    reasons.push('–í—ã—Å–æ–∫–∏–π HS%')
  } else if (averageHeadshots >= 50) {
    smurfScore += 10
    reasons.push('–•–æ—Ä–æ—à–∏–π HS%')
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏
  let probability = 'low'
  let emoji = ''

  if (smurfScore >= 120) {
    probability = 'very_high'
    emoji = 'üêî'
  } else if (smurfScore >= 80) {
    probability = 'high'
    emoji = 'üê∑'
  } else if (smurfScore >= 50) {
    probability = 'medium'
    emoji = ''
  } else if (smurfScore >= 25) {
    probability = 'low'
    emoji = ''
  } else {
    probability = 'very_low'
    emoji = ''
  }

  return {
    smurfScore,
    probability,
    emoji,
    reasons,
    stats: {
      matches,
      winRate,
      averageKills,
      averageKDRatio,
      averageKRRatio,
      averageHeadshots,
    },
  }
}
